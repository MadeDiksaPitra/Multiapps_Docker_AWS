apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "postgres"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: postgres-data
        emptyDir: {}
      - name: init-sql
        configMap:
          name: init-sql-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-sql-configmap
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS books (
      id SERIAL PRIMARY KEY,
      title VARCHAR(100),
      author VARCHAR(100)
    );

    CREATE TABLE IF NOT EXISTS admin (
        id SERIAL PRIMARY KEY,
        username VARCHAR(50) UNIQUE NOT NULL,
        password VARCHAR(200) NOT NULL
    );

    INSERT INTO admin (username, password) VALUES
    ('admin', 'admin');
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: db
